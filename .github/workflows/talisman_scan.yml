name: Talisman

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Expect, jq and Python
      run: sudo apt-get install -y expect jq python3 python3-pip

    - name: Install Python packages
      run: pip install pandas matplotlib tabulate

    - name: Install Talisman
      run: |
        curl --silent https://thoughtworks.github.io/talisman/scripts/install.bash > install.bash
        chmod +x install.bash
        expect -c '
        set timeout -1
        spawn ./install.bash --pre-push
        expect "PLEASE CHOOSE WHERE YOU WISH TO SET TALISMAN_HOME VARIABLE AND talisman binary PATH (Enter option number): "
        send "4\r"
        expect "No git template directory is configured. Let'\''s add one."
        send "1\r"
        interact
        '

    - name: Run Talisman
      run: |
        ~/.talisman/bin/talisman_linux_amd64 --scan > talisman_report.json 2> talisman_error.txt
        ~/.talisman/bin/talisman_linux_amd64 --scanWithHtml 2> talisman_html_error.txt
      continue-on-error: true

    - name: Print Talisman report to console
      run: |
        jq '.' < talisman_report/talisman_reports/data/report.json

    - name: Print Talisman report neatly
      run: |
        python3 -c "
        import json
        import pandas as pd
        from tabulate import tabulate
        with open('talisman_report/talisman_reports/data/report.json') as f:
          data = json.load(f)
        df = pd.json_normalize(data['results'], 'failure_list', ['filename'])
        df['commits'] = df['commits'].apply(lambda x: x[:3] if len(x) > 3 else x)
        print(tabulate(df, headers='keys',tablefmt='psql', showindex=False))
        "
    - name: Convert JSON to PDF
      run: |
        python3 -c "
        import json
        import pandas as pd
        import matplotlib.pyplot as plt
        from pandas.plotting import table
        with open('talisman_report/talisman_reports/data/report.json') as f:
          data = json.load(f)
        df = pd.json_normalize(data['results'], 'failure_list', ['filename'])
        df['commits'] = df['commits'].apply(lambda x: x[:3] if len(x) > 3 else x)
        fig, ax = plt.subplots(figsize=(12, 4)) # set size frame
        ax.xaxis.set_visible(False)  # hide the x axis
        ax.yaxis.set_visible(False)  # hide the y axis
        tab = table(ax, df, loc='center', cellLoc = 'center')  # where df is your data frame
        tab.auto_set_font_size(False) # Activate set fontsize manually
        tab.set_fontsize(10) # if ++fontsize is necessary ++colWidths
        tab.scale(1.2, 1.2) # Table size
        plt.savefig('talisman_report.pdf')
        "    
    - name: Upload PDF report
      uses: actions/upload-artifact@v2
      with:
        name: talisman-report-pdf
        path: talisman_report.pdf